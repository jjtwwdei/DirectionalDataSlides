#+TITLE: Analysis of Directional Data
#+AUTHOR: Brett Presnell
#+DATE: <2015-09-14 Mon>
#+EMAIL: presnell@ufl.edu

#+OPTIONS: toc:t h:2 num:1
#+STARTUP: beamer

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [presentation]

 # Replace the previous two lines with the following for article style
 # export of beamer slides.
 # 
 # #+LaTeX_CLASS: article
 # #+LaTeX_CLASS_OPTIONS: [letterpaper,11pt]
 # #+LATEX_HEADER: \usepackage{beamerarticle}

 # By default, beamer does not number figure and table environments in
 # presentations (but it does nubmer then in beamerarticle). This can
 # be changed with
 # 
 # #+LaTeX: \setbeamertemplate{caption}[numbered]
 # 
 # On the other hand, if we don't want the numbers, then maybe we
 # don't want the "Figure" and "Table" labels either.  These can be
 # eliminated altogether with
 # 
 # #+LaTeX: \setbeamertemplate{caption}{\raggedright\insertcaption\par}

#+LaTeX: \setbeamertemplate{caption}[numbered]

#+PROPERTY: header-args:R :session *R* :cache no :eval yes :noweb yes

 # Not sure if this is the best way to handle this or not.  Note that
 # ":cache yes" turns off ":eval yes", and requires manual evaluation
 # of the code blocks.  So for calculations that we want to cache, set
 # ":cache yes" on the SRC environment and manually evalute that
 # environment.

* Introduction

#+NAME: load-circular-library
#+BEGIN_SRC R :exports none
require("circular")
require("ascii")
options(asciiType="org")
#+END_SRC

** Examples

Wish to analyze data in which response is a "direction":

 - 2d directional data are called /circular/ data
 - 3d directional data are called /spherical/ data
 - not all "directional" data are directions in the usual sense
 - "directional" data may also arise in higher dimensions

** Wind Directions

 - Recorded at  Col de la Roa, Italian Alps
 - n = 310 (first 40 listed below)
 - Radians, clockwise from north
 - Source: Agostinelli (CSDA 2007); also R package =circular=

*** Data
    :PROPERTIES:
    :BEAMER_col: 0.5
    :END:

#+BEGIN_SRC R :results output raw :exports results
ascii(matrix(wind[1:40], ncol=5, byrow=TRUE), digits=2,
      include.rownames=FALSE, include.colnames=FALSE)
#+END_SRC

*** Plot
    :PROPERTIES:
    :BEAMER_col: 0.5
    :END:

#+NAME: windConvert
#+BEGIN_SRC R :exports none
windc <- circular(wind, type="angles", units="radians",
                  template="geographics")
#+END_SRC

#+NAME: windDataPlot
#+HEADER: :file Plots/wind.png :width 480 :height 480
#+BEGIN_SRC R :exports results :results output graphics
require("circular")
par(mar=c(0,0,0,0)+0.1, oma=c(0,0,0,0)+0.1)
plot(windc, cex=1.5, axes=FALSE,
     bin=360, stack=TRUE, sep=0.035, shrink=1.3)
axis.circular(at=circular(seq(0, (7/4)*pi, pi/4),
                  template="geographics"),
              labels=c("N","NE","E","SE","S","SW","W","NW"),
              cex=1.4)
ticks.circular(circular(seq(0, (15/8)*pi, pi/8)),
               zero=pi/2, rotation="clock",
               tcl=0.075)
#+END_SRC

#+RESULTS: windDataPlot

** Arrival Times at an ICU

 - 24-hour clock times (format =hrs.mins=)
 - n = 254 (first 32 listed below)
 - Source: Cox & Lewis (1966); also Fisher (1993) and R package
   =circular=
   
*** Data
    :PROPERTIES:
    :BEAMER_col: 0.5
    :END:

#+BEGIN_SRC R :results output raw :exports results
ascii(matrix(fisherB1[1:32], ncol=4, byrow=TRUE), digits=2,
      include.rownames=FALSE, include.colnames=FALSE)
#+END_SRC

*** Plot
    :PROPERTIES:
    :BEAMER_col: 0.5
    :END:

#+NAME: icuDataPlot
#+HEADER: :file Plots/icu.png
#+BEGIN_SRC R :exports results :results output graphics
## Note that pch=17 does not work properly here.
par(mar=c(0,0,0,0)+0.1, oma=c(0,0,0,0)+0.1)
plot(fisherB1c, cex=1.5, axes=TRUE,
     bin=360, stack=TRUE, sep=0.035, shrink=1.3)
#+END_SRC

#+RESULTS: icuDataPlot

** Primate Vertebrae

 - Orientation of left superior facet of last lumbar vertebra in
   humans, gorillas, and chimpanzees
 - Source: Keifer (2005 UF Anthropology MA Thesis)

#+CAPTION: Human lumbar vertebra with right superior facet labelled
#+CAPTION: as superior articulate process.
#+ATTR_LaTeX: :height 0.5\textheight
[[file:Pictures/Gray93.png]]

** Plot of Human Data
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

#+BEGIN_SRC R :exports none :eval no
vertebrae <- read.table("Data/vertebrae-superior-facet.txt", header=TRUE)
vcol <- rep(c("red","green","blue"), table(vertebrae$species))
require("sphereplot")
rgl.sphgrid(radius=1,
            col.long="red", col.lat="blue",
            deggap=30,
            longtype="D", radaxis=FALSE)
points3d(vertebrae[,-1], col=vcol, size=6.0)
rglproj.sav <- rgl.projection()
rgl.snapshot("vertebraeOnSphere.png")
rgl.close()
#+END_SRC

#+CAPTION: Orientation of left superior facets for samples of 18
#+CAPTION: chimpanzees (red), 16 gorillas (green) and 19 humans (blue).
#+ATTR_LaTeX: :height 0.75\textheight
[[file:Pictures/vertebraeOnSphere.png]]

** Butterfly Migrations

 - Direction of travel observed for 2649 migrating butterflies in
   Florida
 - Source: Thomas J Walker, University of Florida, Dept of Entomology
   and Nematology
 - Other variables:
   - site: 23 locations in Florida
   - observer: Thomas Walker (tw) or James J. Whitesell (jw)
   - species: cloudless sulphur (cs), gulf fritillary (gf),
     long-tailed skipper (lt)
   - distance to coast (km)
   - date and time of observation
   - percentage of sky free of clouds
   - quality of sunlight: (b)right, (h)aze, (o)bstructed, (p)artly
     obstructed
   - presence/absence and direction (N, NE, E, SE, S, SW, W, NW) of wind
   - temperature

#+BEGIN_SRC R :exports none
butterflies <- read.table("Data/butterfly.txt", header=TRUE)
#+END_SRC

** Why is the Analysis of Directional Data Different?

 - First three observations from the wind directions data:
   src_R{paste(round(wind[1:3], 2), collapse=", ")}
 - The mean of these three numbers is
   src_R{round(mean(wind[1:3]), 2)} {{{results(=2.47=)}}}
 - What do you think?

#+NAME: meanAnglePlot
#+HEADER: :file Plots/meanAngle.png
#+BEGIN_SRC R :exports results :results output graphics
par(mar=c(0,0,0,0)+0.1, oma=c(0,0,0,0)+0.1)
plot(windc[1:3], cex=2, lwd=1.5, axes=TRUE, ticks=TRUE, tcl=0.05)
points(circular(mean(wind[1:3]), units="radians", template="geographics"),
       pch=8, cex=4) 
#+END_SRC

#+ATTR_LaTeX: :height 0.5\textheight
#+RESULTS: meanAnglePlot

* Graphical Display of Directional Data

** Graphical Display of Circular Data (in R)

  - Have already seen simple dot plots for circular data, e.g., for
    the wind data:

#+BEGIN_SRC R :exports code :eval no
<<windConvert>>
<<windDataPlot>>
#+END_SRC

** Graphical Display of Circular Data (in R) (ctd)
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

  - and for the ICU data:

#+BEGIN_SRC R :exports code :eval no
<<icuDataPlot>>
#+END_SRC

  - and one more ...

** Graphical Display of Circular Data (in R) (ctd)
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

#+NAME: antsDataPlot
#+HEADER: :file Plots/ants.png
#+BEGIN_SRC R :exports results :results output graphics
par(mar=c(0,0,0,0)+0.1, oma=c(0,0,0,0)+0.1)
plot(fisherB10c$set1, units="degrees", zero=pi/2,
     rotation="clock", pch=16, cex=1.5)
ticks.circular(circular(seq(0, (11/6)*pi, pi/6)),
               zero=pi/2, rotation="clock", tcl=0.075)
points(fisherB10c$set2, zero=pi/2,
       rotation="clock", pch=16, col="darkgrey",
       next.points=-0.1, cex=1.5)
points(fisherB10c$set3, zero=pi/2,
       rotation="clock", pch=1,
       next.points=0.1, cex=1.5)
#+END_SRC

#+CAPTION: Walking directions of long-legged desert ants under
#+CAPTION: three different experimental conditions:
#+ATTR_LaTeX: :height 0.6\textheight
#+RESULTS: antsDataPlot

** Graphical Display of Circular Data (in R) (ctd)
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

#+BEGIN_SRC R :exports code :eval no
<<antsDataPlot>>
#+END_SRC

** Circular Histograms

  - [[https://www.google.com/search?q=R+circular+histogram][Circular histograms]] exist (see Fisher and Mardia and Jupp) but is
    there a ready-made function in R?

** Rose Diagrams

  - Invented by [[https://en.wikipedia.org/wiki/Florence_Nightingale][Florence Nightingale]] (elected first female member of
    the Royals Statistical Society in 1859; honorary member of ASA)
  - [[https://github.com/jennybc/r-graph-catalog/tree/master/figures/fig05-14_nightingale-data][Nightingale's rose in R]] (see also [[http://www.r-bloggers.com/going-beyond-florence-nightingales-data-diagram-did-flo-blow-it-with-wedges/][this post]] and the [[http://shiny.stat.ubc.ca/r-graph-catalog/][R graph catalog]])
  - Note that radii of segments are proportional to /square root/ of
    the frequencies (counts), so that areas are proportional to
    frequencies.  Is this the right thing to do?
  - Rose diagrams suffer from the same problems as histograms.  The
    impression conveyed may depend strongly on:
    - the binwidth of the cells
    - the choice of starting point for the bins

** Adding a Rose Diagram to the Plot of Wind Directions

#+NAME: windRosePart
#+BEGIN_SRC R :exports code :eval no
rose.diag(windc, bins=16, col="darkgrey",
          cex=1.5, prop=1.35, add=TRUE)
#+END_SRC

** Adding a Rose Diagram to the Plot of Wind Directions
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

#+NAME: windRose
#+HEADER: :file Plots/windRose.png
#+BEGIN_SRC R :exports results :results output graphics
<<windDataPlot>>
<<windRosePart>>
#+END_SRC

#+CAPTION: Wind direction data with rose diagram
#+CAPTION: with segment areas are proportional to counts
#+CAPTION: (segment radii are proportional to square roots of counts).
#+ATTR_LaTeX: :height 0.7\textheight
#+RESULTS: windRose

** Changing the Binwidth

#+NAME: windRoseWideBinsPart
#+BEGIN_SRC R :exports none :eval no
rose.diag(windc, bins=8, col="darkgrey",
          cex=1.5, prop=1.15, add=TRUE)
#+END_SRC

#+NAME: windRoseNarrowBinsPart
#+BEGIN_SRC R :exports none :eval no
rose.diag(windc, bins=32, col="darkgrey",
          cex=1.5, prop=1.7, add=TRUE)
#+END_SRC

*** Fewer/Wider Bins
    :PROPERTIES:
    :BEAMER_col: 0.48
    :END:

#+NAME: windRoseWideBins
#+HEADER: :file Plots/windRoseWide.png
#+BEGIN_SRC R :exports results :results output graphics
<<windDataPlot>>
<<windRoseWideBinsPart>>
#+END_SRC

#+RESULTS: windRoseWideBins

*** Narrow Bins
    :PROPERTIES:
    :BEAMER_col: 0.48
    :END:

#+NAME: windRoseNarrowBins
#+HEADER: :file Plots/windRoseNarrow.png
#+BEGIN_SRC R :exports results :results output graphics
<<windDataPlot>>
<<windRoseNarrowBinsPart>>
#+END_SRC

#+RESULTS: windRoseNarrowBins

** Changing the Radii

 - I think that the default "radii proportional to counts" is
   generally best, but this is not always obvious.  The scale
   certainly makes a big difference however.

#+NAME: windRoseLinearPart
#+BEGIN_SRC R :exports code :eval no
rose.diag(windc, bins=16, col="darkgrey",
          radii.scale="linear",
          cex=1.5, prop=2.4, add=TRUE)
#+END_SRC

** Changing the Radii
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

#+NAME: windRoseLinear
#+HEADER: :file Plots/windRoseLinear.png
#+BEGIN_SRC R :exports results :results output graphics
<<windDataPlot>>
<<windRoseLinearPart>>
#+END_SRC

#+CAPTION: Wind direction data with rose diagram
#+CAPTION: (segment radii proportional to counts).
#+ATTR_LaTeX: :height 0.7\textheight
#+RESULTS: windRoseLinear

** Kernel Density Estimates

#+NAME: windKdensPart
#+BEGIN_SRC R :exports code :eval no
lines(density.circular(windc, bw=40), lwd=2, lty=1)
#+END_SRC

** Kernel Density Estimates
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

#+NAME: windKdens
#+HEADER: :file Plots/windKdens.png
#+BEGIN_SRC R :exports results :results output graphics
par(mar=c(0,0,0,0)+0.1, oma=c(0,0,0,0)+0.1)
plot(windc, cex=1.5, axes=FALSE,
     bin=360, stack=TRUE, sep=0.035, shrink=1.7)
axis.circular(at=circular(seq(0, (7/4)*pi, pi/4),
                  template="geographics"),
              labels=c("N","NE","E","SE","S","SW","W","NW"),
              cex=1.4)
ticks.circular(circular(seq(0, (15/8)*pi, pi/8)),
               ## zero=pi/2, rotation="clock",
               tcl=0.075)
<<windRosePart>>
<<windKdensPart>>
#+END_SRC

#+CAPTION: Wind direction data with rose diagram
#+CAPTION: and kernel density estimate.
#+ATTR_LaTeX: :height 0.7\textheight
#+RESULTS: windKdens

** Spherical Data

 - Are there any canned routines for plotting spherical data in R?

* Basic Summary Statistics

** Mean Direction and Mean Resultant Length

 - First three observations from the wind directions data:
#+BEGIN_SRC R :results output raw :exports results
theta <- wind[1:3]
x <- sin(theta)
y <- cos(theta)
ascii(cbind(theta, x, y), digits=2,
      include.rownames=FALSE, include.colnames=TRUE)
#+END_SRC


#+BEGIN_SRC R :exports none
xsum <- sum(x); ysum <- sum(y)
xbar <- mean(x); ybar <- mean(y)
resultant <- c(xsum, ysum)
resultantLength <- sqrt(sum(resultant^2))
meanResultant <- c(xbar, ybar)
meanResultantLength <- sqrt(sum(meanResultant^2))
meanDirection <- meanResultant/meanResultantLength
meanDirectionRadians <- atan2(meanDirection[1], meanDirection[2])
#+END_SRC

 - resultant (sum of direction vectors):
   (src_R{round(xsum, 3)},
   src_R{round(ysum, 3)})

 - mean vector: \((\bar{x}, \bar{y}) = \)
   (src_R{round(xbar, 3)},
   src_R{round(ybar, 3)})

 - resultant length (Euclidean norm of resultant): R = 
   src_R{round(resultantLength, 3)}

 - mean resultant length: \(\bar{R} = \)
   src_R{round(meanResultantLength, 3)}

 - mean direction: \((\bar{x}, \bar{y})/\bar{R} = \)
   (src_R{round(meanDirection[1], 3)},
   src_R{round(meanDirection[2], 3)})

 - \(\tilde{\theta} = \)
   src_R{round(meanDirectionRadians, 3)}

** Plot
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

#+NAME: meanDirection
#+HEADER: :file Plots/meanDirection.png
#+BEGIN_SRC R :exports results :results output graphics
par(mar=c(0,0,0,0)+0.1, oma=c(0,0,0,0)+0.1)
plot(windc[1:3], cex=2, lwd=1.5, axes=TRUE, ticks=TRUE, tcl=0.05)
points(circular(meanDirectionRadians, units="radians", template="geographics"),
       pch=8, cex=4) 
#+END_SRC

#+CAPTION: First three observations from the wind directions data
#+CAPTION: and their sample mean direction.
#+ATTR_LaTeX: :height 0.6\textheight
#+RESULTS: meanDirection

* Aside: Generating from the Uniform Distribution on the Sphere

** Generating Random Points on the Sphere

 - Wish to generate a random "direction" in d-dimensions; i.e., an
   observation from the uniform distribution in the \(d-1\) sphere.
 - Usual way: let X \sim N_d(0, I) and return U = X/||X||.
 - An alternative rejection sampler:
   - Repeat until ||X|| <= 1
     - Let X be uniformly distributed on the cube [-1,1]^d
   - Return U = X/||X||
 - What is the acceptance rate for the rejection sampler:
   - Volume of the \(d - 1\) sphere is \(\pi^{d/2}/\Gamma(d/2 + 1)\)
   - Volume of [-1,1]^d is 2^d
   - Acceptance rate is \[\frac{(\pi^{1/2}/2)^d}{\Gamma(d/2 + 1)}\]

#+BEGIN_SRC R :results output raw :exports results
accRate <- function(d) ((sqrt(pi)/2)^d)/gamma(d/2 + 1)
d <- 2:10
## ar <- matrix(accRate(d), nrow=1,
##              dimnames=list("accept rate", "d"=d))
ar <- rbind("dimension"=d, "accept rate (%)"= 100*accRate(d))
ascii(ar, digits=0, include.rownames=TRUE, include.colnames=FALSE)
#+END_SRC

** Code for Timing Results
   :PROPERTIES:
   :BEAMER_env: fullframe
   :END:

#+NAME: runifSphereR
#+BEGIN_SRC R :exports code
runifSphere <- function(n, dimension, method=c("norm", "cube", "slownorm")) {
    method <- match.arg(method)
    if (method=="norm") {
        u <- matrix(rnorm(n*dimension), ncol=dimension)
        u <- sweep(u, 1, sqrt(apply(u*u, 1, sum)), "/")
    } else if (method=="slownorm") {
        u <- matrix(nrow=n, ncol=dimension)
        for (i in 1:n) {
            x <- rnorm(dimension)
            xnorm <- sqrt(sum(x^2))
            u[i,] <- x/xnorm
        }
    } else {
        u <- matrix(nrow=n, ncol=dimension)
        for (i in 1:n) {
            x <- runif(dimension, -1, 1)
            xnorm <- sqrt(sum(x^2))
            while (xnorm > 1) {
                x <- runif(dimension, -1, 1)
                xnorm <- sqrt(sum(x^2))
            }
            u[i,] <- x/xnorm
        }
    }
    u
}
#+END_SRC
